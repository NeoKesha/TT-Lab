//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace org.ogre {

public class ImGuiPlatformIO : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ImGuiPlatformIO(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ImGuiPlatformIO obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(ImGuiPlatformIO obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~ImGuiPlatformIO() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ImGuiPINVOKE.delete_ImGuiPlatformIO(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ImGuiPlatformIO() : this(ImGuiPINVOKE.new_ImGuiPlatformIO(), true) {
  }

  public SWIGTYPE_p_f_p_ImGuiContext__p_char Platform_GetClipboardTextFn {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_GetClipboardTextFn_set(swigCPtr, SWIGTYPE_p_f_p_ImGuiContext__p_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_GetClipboardTextFn_get(swigCPtr);
      SWIGTYPE_p_f_p_ImGuiContext__p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_ImGuiContext__p_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__void Platform_SetClipboardTextFn {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_SetClipboardTextFn_set(swigCPtr, SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_SetClipboardTextFn_get(swigCPtr);
      SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void Platform_ClipboardUserData {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_ClipboardUserData_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_ClipboardUserData_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__bool Platform_OpenInShellFn {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_OpenInShellFn_set(swigCPtr, SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_OpenInShellFn_get(swigCPtr);
      SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_ImGuiContext_p_q_const__char__bool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void Platform_OpenInShellUserData {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_OpenInShellUserData_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_OpenInShellUserData_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_ImGuiContext_p_ImGuiViewport_p_ImGuiPlatformImeData__void Platform_SetImeDataFn {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_SetImeDataFn_set(swigCPtr, SWIGTYPE_p_f_p_ImGuiContext_p_ImGuiViewport_p_ImGuiPlatformImeData__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_SetImeDataFn_get(swigCPtr);
      SWIGTYPE_p_f_p_ImGuiContext_p_ImGuiViewport_p_ImGuiPlatformImeData__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_ImGuiContext_p_ImGuiViewport_p_ImGuiPlatformImeData__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void Platform_ImeUserData {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_ImeUserData_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ImGuiPINVOKE.ImGuiPlatformIO_Platform_ImeUserData_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public ushort Platform_LocaleDecimalPoint {
    set {
      ImGuiPINVOKE.ImGuiPlatformIO_Platform_LocaleDecimalPoint_set(swigCPtr, value);
    } 
    get {
      ushort ret = ImGuiPINVOKE.ImGuiPlatformIO_Platform_LocaleDecimalPoint_get(swigCPtr);
      return ret;
    } 
  }

}

}
